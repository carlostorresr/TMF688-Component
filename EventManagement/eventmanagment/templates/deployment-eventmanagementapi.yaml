apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Release.Name}}-eventmanagementapi
  labels:
    oda.tmforum.org/componentName: {{.Release.Name}}-{{.Values.component.name}}
spec:
  replicas: 1
  selector:
    matchLabels:
      impl: {{.Release.Name}}-eventmanagementapi
  template:
    metadata:
      labels:
        impl: {{.Release.Name}}-eventmanagementapi
        app: {{.Release.Name}}-{{.Values.component.name}}
        version:  eventmanagementapi-0.1
    spec:
      containers:
      - name: {{.Release.Name}}-eventmanagementapi         
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: RELEASE_NAME
          value: {{.Release.Name}}           
        - name: COMPONENT_NAME
          value: {{.Release.Name}}-{{.Values.component.name}}
        - name: MONGODB_HOST
          value: {{.Release.Name}}-mongodb
        - name: MONGODB_PORT
          value: "{{.Values.mongodb.port}}"
        - name: MONGODB_DATABASE
          value: {{.Values.mongodb.database}}
        - name: NODE_ENV
          value: production
        - name: KAFKA_BROKER
          value: "{{ .Values.env.KAFKA_BROKER }}"
        - name: KAFKA_TOPIC
          value: "{{ .Values.env.KAFKA_TOPIC }}"
        - name: KAFKA_BRIDGE_URL
          value: "http://kafka-bridge.kafka:8080"
        ports:
        - name: {{.Release.Name}}-evmapi
          containerPort: 8080
        # startupProbe:
        #   httpGet:
        #     path: /{{.Release.Name}}-{{.Values.component.name}}/tmf-api/eventManagement/v4
        #     port: 8080
        #   initialDelaySeconds: 10
        #   periodSeconds: 5
        #   failureThreshold: 30
